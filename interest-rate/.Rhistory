plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1.1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
?geom_line
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7, linetype = "dashed") + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7, linetype = "longdash") + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7, linetype = "dotdash") + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7, linetype = "blank") + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7, linetype = "twodash") + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
install.packages("gganimate")
key_rates_graph <- key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
key_rates_graph
library(gganimate)
key_rates_graph +
transition_reveal(date)
key_rates_graph_animation <- key_rates_graph +
transition_reveal(date)
key_rates_graph_animation
key_rates_graph_animation
?transition_reveal
library(gapminder)
install.packages("gapminder")
library(gapminder)
library(ggplot2)
library(gganimate)
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_time(year)
library(gapminder)
library(ggplot2)
library(gganimate)
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_time(year) +
file_renderer(dir = ".", prefix = "gganim_plot", overwrite = FALSE)
saveRDS(key_rates_graph, "key_rates_graph.rds")
library(gganimate)
graph <- readRDS("key_rates_graph.rds")
graph
graph_animated <- graph + transition_time(date)
graph_animated
library(tidyverse)
library(ggthemes)
library(gganimate)
source("../objects_and_functions.R")
# Read graphic object
graph <- readRDS("key_rates_graph.rds")
graph
graph_animated <- graph + transition_reveal(date)
graph_animated
print(graph_animated)
graph_animated
key_rates_graph
library(tidyverse)
library(lubridate)
library(ggthemes)
library(gganimate)
source("../objects_and_functions.R")
remove.packages(gganimate)
remove.packages("gganimate")
install.packages("gganimate")
rm(list=ls())
remove.packages("gganimate")
remove.packages(gganimate)
install.packages("gganimate")
library(tidyverse)
library(lubridate)
library(ggthemes)
library(gganimate)
source("../objects_and_functions.R")
install.packages("gifsky")
install.packages("av")
key_rates_graph <- key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
library(gapminder)
library(ggplot2)
library(gganimate)
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_reveal(year)
?transition_reveal
p
library(gifsky)
install.packages("gifsky")
install.packages("gifsski")
install.packages("gifski")
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_reveal(year)
p + transition_reveal(year)
library(gifski)
p + transition_reveal(year)
library(gifski)
anim <- ggplot(mtcars, aes(mpg, disp)) +
transition_states(gear, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
if (FALSE) {
# Renderers are specified in the `animate()` function
animate(anim, renderer = gifski_renderer())
}
anim
anim <- ggplot(mtcars, aes(mpg, disp)) +
transition_states(gear, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
animate(anim, renderer = gifski_renderer())
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
anim <- p + p + transition_reveal(year)
data(gapminder)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
anim <- p + p + transition_reveal(year)
anim <- p + transition_reveal(year)
animate(anim, renderer = gifski_renderer())
?gifski_renderer
key_rates_graph <- key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
library(tidyverse)
library(lubridate)
library(ggthemes)
library(gganimate)
library(gifski)
source("../objects_and_functions.R")
# Fedfunds data
fedfunds <- read.csv2("fedfunds.csv")
head(fedfunds)
# Seliec data
selic <- read.csv2("selic.csv")
head(selic)
# End date for analysis
end_date <- date("2024-03-31")
# Start date for analysis (30 years from end date)
start_date <- ymd(end_date) - years(20)
fedfunds <- fedfunds %>%
mutate(
prev_date = ceiling_date(ymd(lag(observation_date)), "month") - days(1), # Last day of previous date to match Selic data
rate_name = ("EFFR")
) %>%
filter(between(prev_date, start_date, end_date)) %>% # Filter selected time interval
rename(
date = prev_date,
key_rate = fedfunds
) %>% # Rename columns
select(date, key_rate, rate_name) # Select columns
selic <- selic %>%
mutate(
date = ceiling_date(ymd(date(paste0(data, "-01"))), "month") - days(1), # Last day of month
selic = round(((1 + selic / 100) ^ 12 - 1) * 100, 2), # Annualize rate
rate_name = "Selic"
) %>%
filter(between(date, start_date, end_date)) %>% # Filter selected time interval
rename(key_rate = selic) %>% # Rename columns
select(date, key_rate, rate_name) # Select columns
# Bind rows of the two datasets
key_rates_dataset <- rbind(fedfunds, selic)
# Display first rows
head(key_rates_dataset)
key_rates_graph <- key_rates_dataset %>%
ggplot(aes(x = date, y = key_rate, color = rate_name)) +
geom_line(linewidth = 1, alpha = 0.7) + # Line graphic
scale_colour_manual(values = color_pallete[c(3, 4)]) + # Colors
theme_classic() + # Main theme
labs(
title = "Brazil vs. U.S. Interest Rate",
x = "Date",
y = "Annual Interest rate %",
color = "Interest rate"
) + # Titles
scale_x_date(date_labels = "%Y-%m", breaks = "12 months") + # Date labels scale
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, color = "white"),
axis.text.y = element_text(color = "white"),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, color = "white"),
plot.background = element_rect(fill = "black"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
panel.background = element_rect(fill = NA)
) # Theme settings
# Create animation
key_rates_graph_animated <- key_rates_graph + transition_reveal(date)
# Render animation
animate(anim, renderer = gifski_renderer(loop = FALSE))
animate(key_rates_graph_animated, renderer = gifski_renderer(loop = FALSE))
?animate
animate(key_rates_graph_animated, fps = 30, width = 500, height = 800, duration = 10, end_pause = 60, res = 100, renderer = gifski_renderer(loop = FALSE))
animate(key_rates_graph_animated, fps = 30, width = 500, height = 800, duration = 10, res = 100, renderer = gifski_renderer(loop = FALSE))
animate(key_rates_graph_animated, fps = 30, width = 700, height = 700, duration = 10, renderer = gifski_renderer(loop = FALSE))
?av_renderer
animate(key_rates_graph_animated, fps = 30, width = 600, height = 500, duration = 5, renderer = av_renderer())
anim_save("interest_rate_evolution.avi")
?gganimate
?animate
nrow(key_rates_dataset / 2)
nrow(key_rates_dataset)
nrow(key_rates_dataset) / 2
animate(key_rates_graph_animated, fps = 30, width = 700, height = 500, duration = 10, nframes = nrow(key_rates_dataset) / 2, renderer = av_renderer())
anim_save("interest_rate_evolution.avi")
?animate
animate(key_rates_graph_animated, fps = 30, width = 700, height = 500, duration = 10, nframes = nrow(key_rates_dataset) / 2, renderer = av_renderer(), res = 150)
anim_save("interest_rate_evolution.avi")
animate(key_rates_graph_animated, fps = 30, width = 700, height = 500, duration = 10, nframes = nrow(key_rates_dataset) / 2, renderer = av_renderer(), res = 100)
anim_save("interest_rate_evolution.avi")
